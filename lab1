 # первая лаба по аисду, тут чисто то что проходит тесты(считать оптимальное колво узлов и прописать основную часть анроллед лист)

import math

class Node:
    def __init__(self):
        self.size_of_node = 0
        self.data = []
        self.next = None

def calculate_optimal_node_size(size_of_node):
    return math.ceil(4 * size_of_node / 64) + 1

#print(calculate_optimal_node_size(int(input())))

class UnrolledLinkedList:
    def __init__(self, data = None, size_of_node = 1):
        if data is None:
            data = list()
        self.size_of_node = size_of_node
        self.nodes_count = math.ceil(len(data) / size_of_node)
        self.data_len = len(data)
        self.head = Node()
        self.head.data = data[:size_of_node]
        self.head.count_of_added = len(self.head.data)
        if self.nodes_count > 1:
            self.head.next = Node()
            temp_next = self.head.next
            for i in range(1, self.nodes_count):
                temp_next.data = data[i * size_of_node:(i + 1) * size_of_node]
                temp_next.count_of_added = len(temp_next.data)
                if i != self.nodes_count - 1:
                    temp_next.next = Node()
                    temp_next = temp_next.next

    def print_list(self):
        temp_next = self.head
        for i in range(self.nodes_count):
            print(f"Node {i}: {' '.join(map(str, temp_next.data))}")
            temp_next = temp_next.next

n = list(map(int,input().split()))
test = UnrolledLinkedList(n, calculate_optimal_node_size(len(n)))
test.print_list()
